// Generated by CoffeeScript 1.11.1
(function() {
  var LevelStore, app, authenticationCheck, bodyparser, cookieParser, express, http, io, morgan, server, session;

  http = require("http");

  express = require("express");

  morgan = require("morgan");

  bodyparser = require("body-parser");

  cookieParser = require("cookie-parser");

  app = express();

  server = require("http").Server(app);

  io = require("socket.io")(server);

  session = require("express-session");

  LevelStore = require("level-session-store")(session);

  app.use(session({
    secret: "MyAppSecret",
    store: new LevelStore("./db/sessions"),
    resave: true,
    saveUninitialized: true
  }));

  authenticationCheck = function(req, res, next) {
    if (req.session.signIn === false) {
      return res.redirect("/signin");
    } else {
      return next();
    }
  };

  app.use("/", express["static"](__dirname + "/../public"));

  app.use(bodyparser.json());

  app.use(bodyparser.urlencoded());

  app.use(cookieParser());

  app.use(require("./routes/authentication.coffee"));

  app.use(authenticationCheck, require("./routes/user.coffee"));

  app.use(authenticationCheck, require("./routes/user-metrics.coffee"));

  app.set("port", 1337);

  app.set("view engine", "pug");

  app.set("views", __dirname + "/../views");

  server.listen(app.get("port"), function() {
    return console.log("listening on port " + (app.get("port")));
  });

}).call(this);
